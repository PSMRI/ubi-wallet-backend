name: Deploy Wallet Backend to UBA-PILOT

on:
  # ‚úÖ Manual trigger with validated TAG input
  workflow_dispatch:
    inputs:
      TAG:
        description: 'Docker image tag to deploy (must match vX.Y.Z or vX.Y.Z-<suffix>)'
        required: true
        default: 'v0.0.0'

  # ‚úÖ Automatic trigger on version tag push (regex-based)
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'

jobs:
  Deploy_Wallet_Backend_to_UBA_PILOT:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment: UBA-DEPWD-PILOT

    steps:
      # ‚úÖ Validate TAG format for manual runs
      - name: Validate TAG format
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          TAG="${{ github.event.inputs.TAG }}"
          echo "Validating TAG: $TAG"
          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "‚ùå Invalid TAG format. Must match vX.Y.Z or vX.Y.Z-<suffix>"
            exit 1
          fi
          echo "‚úÖ TAG format is valid"

      - name: Deploy Wallet Backend via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.HOST_NAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "üöÄ Starting UBA-PILOT Wallet Backend deployment..."

            # ----- Variables -----
            export BASE_DIR="${{ secrets.TARGET_DIR }}"
            export REPO_NAME="ubi-wallet-backend"
            export REPO_URL="https://github.com/PSMRI/ubi-wallet-backend.git"
            export CONTAINER_NAME="ubi-wallet-backend"
            export SERVICE_NAME="wallet-backend"

            # ----- Determine TAG -----
            if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
              TAG="${{ github.event.inputs.TAG }}"
            else
              TAG="${{ github.ref_name }}"
            fi

            # ----- Determine branch at runtime -----
            BRANCH="${GITHUB_REF_NAME:-main}"

            echo "Deploying TAG: $TAG from branch: $BRANCH"

            # ----- Navigate to base directory -----
            cd "$BASE_DIR" || exit 1

            # ----- Prepare environment file -----
            if [ -f .env ]; then rm .env; fi
            echo "${{ secrets.ENV }}" > .env

            # ----- Ensure deploy.sh is executable -----
            chmod +x deploy.sh

            # ----- Run deploy script -----
            SERVICE_NAME="$SERVICE_NAME" \
            CONTAINER_NAME="$CONTAINER_NAME" \
            TAG="$TAG" \
            BRANCH="$BRANCH" \
            REPO_NAME="$REPO_NAME" \
            REPO_URL="$REPO_URL" \
            ./deploy.sh

      # ‚úÖ Slack notification
      - name: Notify on Slack channel
        uses: iRoachie/slack-github-actions@v2.3.2
        if: ${{ always() }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          fields: repo,commit,author
